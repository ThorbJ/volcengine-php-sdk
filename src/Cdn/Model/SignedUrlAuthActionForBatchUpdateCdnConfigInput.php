<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Cdn\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class SignedUrlAuthActionForBatchUpdateCdnConfigInput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SignedUrlAuthActionForBatchUpdateCdnConfigInput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'auth_algorithm' => 'string',
        'backup_secret_key' => 'string',
        'custom_variable_rules' => '\Volcengine\Cdn\Model\CustomVariableRulesForBatchUpdateCdnConfigInput',
        'duration' => 'int',
        'keep_origin_arg' => 'bool',
        'master_secret_key' => 'string',
        'mpd_var_expand' => 'bool',
        'rewrite_m3u8' => 'bool',
        'rewrite_m3u8_rule' => '\Volcengine\Cdn\Model\RewriteM3u8RuleForBatchUpdateCdnConfigInput',
        'rewrite_mpd' => 'bool',
        'sign_name' => 'string',
        'signature_rule' => 'string[]',
        'time_format' => 'string',
        'time_name' => 'string',
        'url_auth_type' => 'string',
        'url_auth_custom_action' => '\Volcengine\Cdn\Model\UrlAuthCustomActionForBatchUpdateCdnConfigInput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'auth_algorithm' => null,
        'backup_secret_key' => null,
        'custom_variable_rules' => null,
        'duration' => 'int64',
        'keep_origin_arg' => null,
        'master_secret_key' => null,
        'mpd_var_expand' => null,
        'rewrite_m3u8' => null,
        'rewrite_m3u8_rule' => null,
        'rewrite_mpd' => null,
        'sign_name' => null,
        'signature_rule' => null,
        'time_format' => null,
        'time_name' => null,
        'url_auth_type' => null,
        'url_auth_custom_action' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'auth_algorithm' => 'AuthAlgorithm',
        'backup_secret_key' => 'BackupSecretKey',
        'custom_variable_rules' => 'CustomVariableRules',
        'duration' => 'Duration',
        'keep_origin_arg' => 'KeepOriginArg',
        'master_secret_key' => 'MasterSecretKey',
        'mpd_var_expand' => 'MpdVarExpand',
        'rewrite_m3u8' => 'RewriteM3u8',
        'rewrite_m3u8_rule' => 'RewriteM3u8Rule',
        'rewrite_mpd' => 'RewriteMpd',
        'sign_name' => 'SignName',
        'signature_rule' => 'SignatureRule',
        'time_format' => 'TimeFormat',
        'time_name' => 'TimeName',
        'url_auth_type' => 'URLAuthType',
        'url_auth_custom_action' => 'UrlAuthCustomAction'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'auth_algorithm' => 'setAuthAlgorithm',
        'backup_secret_key' => 'setBackupSecretKey',
        'custom_variable_rules' => 'setCustomVariableRules',
        'duration' => 'setDuration',
        'keep_origin_arg' => 'setKeepOriginArg',
        'master_secret_key' => 'setMasterSecretKey',
        'mpd_var_expand' => 'setMpdVarExpand',
        'rewrite_m3u8' => 'setRewriteM3u8',
        'rewrite_m3u8_rule' => 'setRewriteM3u8Rule',
        'rewrite_mpd' => 'setRewriteMpd',
        'sign_name' => 'setSignName',
        'signature_rule' => 'setSignatureRule',
        'time_format' => 'setTimeFormat',
        'time_name' => 'setTimeName',
        'url_auth_type' => 'setUrlAuthType',
        'url_auth_custom_action' => 'setUrlAuthCustomAction'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'auth_algorithm' => 'getAuthAlgorithm',
        'backup_secret_key' => 'getBackupSecretKey',
        'custom_variable_rules' => 'getCustomVariableRules',
        'duration' => 'getDuration',
        'keep_origin_arg' => 'getKeepOriginArg',
        'master_secret_key' => 'getMasterSecretKey',
        'mpd_var_expand' => 'getMpdVarExpand',
        'rewrite_m3u8' => 'getRewriteM3u8',
        'rewrite_m3u8_rule' => 'getRewriteM3u8Rule',
        'rewrite_mpd' => 'getRewriteMpd',
        'sign_name' => 'getSignName',
        'signature_rule' => 'getSignatureRule',
        'time_format' => 'getTimeFormat',
        'time_name' => 'getTimeName',
        'url_auth_type' => 'getUrlAuthType',
        'url_auth_custom_action' => 'getUrlAuthCustomAction'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['auth_algorithm'] = isset($data['auth_algorithm']) ? $data['auth_algorithm'] : null;
        $this->container['backup_secret_key'] = isset($data['backup_secret_key']) ? $data['backup_secret_key'] : null;
        $this->container['custom_variable_rules'] = isset($data['custom_variable_rules']) ? $data['custom_variable_rules'] : null;
        $this->container['duration'] = isset($data['duration']) ? $data['duration'] : null;
        $this->container['keep_origin_arg'] = isset($data['keep_origin_arg']) ? $data['keep_origin_arg'] : null;
        $this->container['master_secret_key'] = isset($data['master_secret_key']) ? $data['master_secret_key'] : null;
        $this->container['mpd_var_expand'] = isset($data['mpd_var_expand']) ? $data['mpd_var_expand'] : null;
        $this->container['rewrite_m3u8'] = isset($data['rewrite_m3u8']) ? $data['rewrite_m3u8'] : null;
        $this->container['rewrite_m3u8_rule'] = isset($data['rewrite_m3u8_rule']) ? $data['rewrite_m3u8_rule'] : null;
        $this->container['rewrite_mpd'] = isset($data['rewrite_mpd']) ? $data['rewrite_mpd'] : null;
        $this->container['sign_name'] = isset($data['sign_name']) ? $data['sign_name'] : null;
        $this->container['signature_rule'] = isset($data['signature_rule']) ? $data['signature_rule'] : null;
        $this->container['time_format'] = isset($data['time_format']) ? $data['time_format'] : null;
        $this->container['time_name'] = isset($data['time_name']) ? $data['time_name'] : null;
        $this->container['url_auth_type'] = isset($data['url_auth_type']) ? $data['url_auth_type'] : null;
        $this->container['url_auth_custom_action'] = isset($data['url_auth_custom_action']) ? $data['url_auth_custom_action'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets auth_algorithm
     *
     * @return string
     */
    public function getAuthAlgorithm()
    {
        return $this->container['auth_algorithm'];
    }

    /**
     * Sets auth_algorithm
     *
     * @param string $auth_algorithm auth_algorithm
     *
     * @return $this
     */
    public function setAuthAlgorithm($auth_algorithm)
    {
        $this->container['auth_algorithm'] = $auth_algorithm;

        return $this;
    }

    /**
     * Gets backup_secret_key
     *
     * @return string
     */
    public function getBackupSecretKey()
    {
        return $this->container['backup_secret_key'];
    }

    /**
     * Sets backup_secret_key
     *
     * @param string $backup_secret_key backup_secret_key
     *
     * @return $this
     */
    public function setBackupSecretKey($backup_secret_key)
    {
        $this->container['backup_secret_key'] = $backup_secret_key;

        return $this;
    }

    /**
     * Gets custom_variable_rules
     *
     * @return \Volcengine\Cdn\Model\CustomVariableRulesForBatchUpdateCdnConfigInput
     */
    public function getCustomVariableRules()
    {
        return $this->container['custom_variable_rules'];
    }

    /**
     * Sets custom_variable_rules
     *
     * @param \Volcengine\Cdn\Model\CustomVariableRulesForBatchUpdateCdnConfigInput $custom_variable_rules custom_variable_rules
     *
     * @return $this
     */
    public function setCustomVariableRules($custom_variable_rules)
    {
        $this->container['custom_variable_rules'] = $custom_variable_rules;

        return $this;
    }

    /**
     * Gets duration
     *
     * @return int
     */
    public function getDuration()
    {
        return $this->container['duration'];
    }

    /**
     * Sets duration
     *
     * @param int $duration duration
     *
     * @return $this
     */
    public function setDuration($duration)
    {
        $this->container['duration'] = $duration;

        return $this;
    }

    /**
     * Gets keep_origin_arg
     *
     * @return bool
     */
    public function getKeepOriginArg()
    {
        return $this->container['keep_origin_arg'];
    }

    /**
     * Sets keep_origin_arg
     *
     * @param bool $keep_origin_arg keep_origin_arg
     *
     * @return $this
     */
    public function setKeepOriginArg($keep_origin_arg)
    {
        $this->container['keep_origin_arg'] = $keep_origin_arg;

        return $this;
    }

    /**
     * Gets master_secret_key
     *
     * @return string
     */
    public function getMasterSecretKey()
    {
        return $this->container['master_secret_key'];
    }

    /**
     * Sets master_secret_key
     *
     * @param string $master_secret_key master_secret_key
     *
     * @return $this
     */
    public function setMasterSecretKey($master_secret_key)
    {
        $this->container['master_secret_key'] = $master_secret_key;

        return $this;
    }

    /**
     * Gets mpd_var_expand
     *
     * @return bool
     */
    public function getMpdVarExpand()
    {
        return $this->container['mpd_var_expand'];
    }

    /**
     * Sets mpd_var_expand
     *
     * @param bool $mpd_var_expand mpd_var_expand
     *
     * @return $this
     */
    public function setMpdVarExpand($mpd_var_expand)
    {
        $this->container['mpd_var_expand'] = $mpd_var_expand;

        return $this;
    }

    /**
     * Gets rewrite_m3u8
     *
     * @return bool
     */
    public function getRewriteM3u8()
    {
        return $this->container['rewrite_m3u8'];
    }

    /**
     * Sets rewrite_m3u8
     *
     * @param bool $rewrite_m3u8 rewrite_m3u8
     *
     * @return $this
     */
    public function setRewriteM3u8($rewrite_m3u8)
    {
        $this->container['rewrite_m3u8'] = $rewrite_m3u8;

        return $this;
    }

    /**
     * Gets rewrite_m3u8_rule
     *
     * @return \Volcengine\Cdn\Model\RewriteM3u8RuleForBatchUpdateCdnConfigInput
     */
    public function getRewriteM3u8Rule()
    {
        return $this->container['rewrite_m3u8_rule'];
    }

    /**
     * Sets rewrite_m3u8_rule
     *
     * @param \Volcengine\Cdn\Model\RewriteM3u8RuleForBatchUpdateCdnConfigInput $rewrite_m3u8_rule rewrite_m3u8_rule
     *
     * @return $this
     */
    public function setRewriteM3u8Rule($rewrite_m3u8_rule)
    {
        $this->container['rewrite_m3u8_rule'] = $rewrite_m3u8_rule;

        return $this;
    }

    /**
     * Gets rewrite_mpd
     *
     * @return bool
     */
    public function getRewriteMpd()
    {
        return $this->container['rewrite_mpd'];
    }

    /**
     * Sets rewrite_mpd
     *
     * @param bool $rewrite_mpd rewrite_mpd
     *
     * @return $this
     */
    public function setRewriteMpd($rewrite_mpd)
    {
        $this->container['rewrite_mpd'] = $rewrite_mpd;

        return $this;
    }

    /**
     * Gets sign_name
     *
     * @return string
     */
    public function getSignName()
    {
        return $this->container['sign_name'];
    }

    /**
     * Sets sign_name
     *
     * @param string $sign_name sign_name
     *
     * @return $this
     */
    public function setSignName($sign_name)
    {
        $this->container['sign_name'] = $sign_name;

        return $this;
    }

    /**
     * Gets signature_rule
     *
     * @return string[]
     */
    public function getSignatureRule()
    {
        return $this->container['signature_rule'];
    }

    /**
     * Sets signature_rule
     *
     * @param string[] $signature_rule signature_rule
     *
     * @return $this
     */
    public function setSignatureRule($signature_rule)
    {
        $this->container['signature_rule'] = $signature_rule;

        return $this;
    }

    /**
     * Gets time_format
     *
     * @return string
     */
    public function getTimeFormat()
    {
        return $this->container['time_format'];
    }

    /**
     * Sets time_format
     *
     * @param string $time_format time_format
     *
     * @return $this
     */
    public function setTimeFormat($time_format)
    {
        $this->container['time_format'] = $time_format;

        return $this;
    }

    /**
     * Gets time_name
     *
     * @return string
     */
    public function getTimeName()
    {
        return $this->container['time_name'];
    }

    /**
     * Sets time_name
     *
     * @param string $time_name time_name
     *
     * @return $this
     */
    public function setTimeName($time_name)
    {
        $this->container['time_name'] = $time_name;

        return $this;
    }

    /**
     * Gets url_auth_type
     *
     * @return string
     */
    public function getUrlAuthType()
    {
        return $this->container['url_auth_type'];
    }

    /**
     * Sets url_auth_type
     *
     * @param string $url_auth_type url_auth_type
     *
     * @return $this
     */
    public function setUrlAuthType($url_auth_type)
    {
        $this->container['url_auth_type'] = $url_auth_type;

        return $this;
    }

    /**
     * Gets url_auth_custom_action
     *
     * @return \Volcengine\Cdn\Model\UrlAuthCustomActionForBatchUpdateCdnConfigInput
     */
    public function getUrlAuthCustomAction()
    {
        return $this->container['url_auth_custom_action'];
    }

    /**
     * Sets url_auth_custom_action
     *
     * @param \Volcengine\Cdn\Model\UrlAuthCustomActionForBatchUpdateCdnConfigInput $url_auth_custom_action url_auth_custom_action
     *
     * @return $this
     */
    public function setUrlAuthCustomAction($url_auth_custom_action)
    {
        $this->container['url_auth_custom_action'] = $url_auth_custom_action;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

