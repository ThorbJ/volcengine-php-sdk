<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Cdn\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class TopDataDetailForDescribeOriginStatusCodeRankingOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TopDataDetailForDescribeOriginStatusCodeRankingOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'item_key' => 'string',
        'status2xx' => 'double',
        'status2xx_ratio' => 'double',
        'status3xx' => 'double',
        'status3xx_ratio' => 'double',
        'status4xx' => 'double',
        'status4xx_ratio' => 'double',
        'status5xx' => 'double',
        'status5xx_ratio' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'item_key' => null,
        'status2xx' => 'double',
        'status2xx_ratio' => 'double',
        'status3xx' => 'double',
        'status3xx_ratio' => 'double',
        'status4xx' => 'double',
        'status4xx_ratio' => 'double',
        'status5xx' => 'double',
        'status5xx_ratio' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'item_key' => 'ItemKey',
        'status2xx' => 'Status2xx',
        'status2xx_ratio' => 'Status2xxRatio',
        'status3xx' => 'Status3xx',
        'status3xx_ratio' => 'Status3xxRatio',
        'status4xx' => 'Status4xx',
        'status4xx_ratio' => 'Status4xxRatio',
        'status5xx' => 'Status5xx',
        'status5xx_ratio' => 'Status5xxRatio'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'item_key' => 'setItemKey',
        'status2xx' => 'setStatus2xx',
        'status2xx_ratio' => 'setStatus2xxRatio',
        'status3xx' => 'setStatus3xx',
        'status3xx_ratio' => 'setStatus3xxRatio',
        'status4xx' => 'setStatus4xx',
        'status4xx_ratio' => 'setStatus4xxRatio',
        'status5xx' => 'setStatus5xx',
        'status5xx_ratio' => 'setStatus5xxRatio'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'item_key' => 'getItemKey',
        'status2xx' => 'getStatus2xx',
        'status2xx_ratio' => 'getStatus2xxRatio',
        'status3xx' => 'getStatus3xx',
        'status3xx_ratio' => 'getStatus3xxRatio',
        'status4xx' => 'getStatus4xx',
        'status4xx_ratio' => 'getStatus4xxRatio',
        'status5xx' => 'getStatus5xx',
        'status5xx_ratio' => 'getStatus5xxRatio'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['item_key'] = isset($data['item_key']) ? $data['item_key'] : null;
        $this->container['status2xx'] = isset($data['status2xx']) ? $data['status2xx'] : null;
        $this->container['status2xx_ratio'] = isset($data['status2xx_ratio']) ? $data['status2xx_ratio'] : null;
        $this->container['status3xx'] = isset($data['status3xx']) ? $data['status3xx'] : null;
        $this->container['status3xx_ratio'] = isset($data['status3xx_ratio']) ? $data['status3xx_ratio'] : null;
        $this->container['status4xx'] = isset($data['status4xx']) ? $data['status4xx'] : null;
        $this->container['status4xx_ratio'] = isset($data['status4xx_ratio']) ? $data['status4xx_ratio'] : null;
        $this->container['status5xx'] = isset($data['status5xx']) ? $data['status5xx'] : null;
        $this->container['status5xx_ratio'] = isset($data['status5xx_ratio']) ? $data['status5xx_ratio'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets item_key
     *
     * @return string
     */
    public function getItemKey()
    {
        return $this->container['item_key'];
    }

    /**
     * Sets item_key
     *
     * @param string $item_key item_key
     *
     * @return $this
     */
    public function setItemKey($item_key)
    {
        $this->container['item_key'] = $item_key;

        return $this;
    }

    /**
     * Gets status2xx
     *
     * @return double
     */
    public function getStatus2xx()
    {
        return $this->container['status2xx'];
    }

    /**
     * Sets status2xx
     *
     * @param double $status2xx status2xx
     *
     * @return $this
     */
    public function setStatus2xx($status2xx)
    {
        $this->container['status2xx'] = $status2xx;

        return $this;
    }

    /**
     * Gets status2xx_ratio
     *
     * @return double
     */
    public function getStatus2xxRatio()
    {
        return $this->container['status2xx_ratio'];
    }

    /**
     * Sets status2xx_ratio
     *
     * @param double $status2xx_ratio status2xx_ratio
     *
     * @return $this
     */
    public function setStatus2xxRatio($status2xx_ratio)
    {
        $this->container['status2xx_ratio'] = $status2xx_ratio;

        return $this;
    }

    /**
     * Gets status3xx
     *
     * @return double
     */
    public function getStatus3xx()
    {
        return $this->container['status3xx'];
    }

    /**
     * Sets status3xx
     *
     * @param double $status3xx status3xx
     *
     * @return $this
     */
    public function setStatus3xx($status3xx)
    {
        $this->container['status3xx'] = $status3xx;

        return $this;
    }

    /**
     * Gets status3xx_ratio
     *
     * @return double
     */
    public function getStatus3xxRatio()
    {
        return $this->container['status3xx_ratio'];
    }

    /**
     * Sets status3xx_ratio
     *
     * @param double $status3xx_ratio status3xx_ratio
     *
     * @return $this
     */
    public function setStatus3xxRatio($status3xx_ratio)
    {
        $this->container['status3xx_ratio'] = $status3xx_ratio;

        return $this;
    }

    /**
     * Gets status4xx
     *
     * @return double
     */
    public function getStatus4xx()
    {
        return $this->container['status4xx'];
    }

    /**
     * Sets status4xx
     *
     * @param double $status4xx status4xx
     *
     * @return $this
     */
    public function setStatus4xx($status4xx)
    {
        $this->container['status4xx'] = $status4xx;

        return $this;
    }

    /**
     * Gets status4xx_ratio
     *
     * @return double
     */
    public function getStatus4xxRatio()
    {
        return $this->container['status4xx_ratio'];
    }

    /**
     * Sets status4xx_ratio
     *
     * @param double $status4xx_ratio status4xx_ratio
     *
     * @return $this
     */
    public function setStatus4xxRatio($status4xx_ratio)
    {
        $this->container['status4xx_ratio'] = $status4xx_ratio;

        return $this;
    }

    /**
     * Gets status5xx
     *
     * @return double
     */
    public function getStatus5xx()
    {
        return $this->container['status5xx'];
    }

    /**
     * Sets status5xx
     *
     * @param double $status5xx status5xx
     *
     * @return $this
     */
    public function setStatus5xx($status5xx)
    {
        $this->container['status5xx'] = $status5xx;

        return $this;
    }

    /**
     * Gets status5xx_ratio
     *
     * @return double
     */
    public function getStatus5xxRatio()
    {
        return $this->container['status5xx_ratio'];
    }

    /**
     * Sets status5xx_ratio
     *
     * @param double $status5xx_ratio status5xx_ratio
     *
     * @return $this
     */
    public function setStatus5xxRatio($status5xx_ratio)
    {
        $this->container['status5xx_ratio'] = $status5xx_ratio;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

