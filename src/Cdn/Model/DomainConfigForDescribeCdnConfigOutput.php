<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Cdn\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class DomainConfigForDescribeCdnConfigOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DomainConfigForDescribeCdnConfigOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'area_access_rule' => '\Volcengine\Cdn\Model\AreaAccessRuleForDescribeCdnConfigOutput',
        'backup_cname' => 'string',
        'bandwidth_limit' => '\Volcengine\Cdn\Model\BandwidthLimitForDescribeCdnConfigOutput',
        'browser_cache' => '\Volcengine\Cdn\Model\BrowserCacheForDescribeCdnConfigOutput[]',
        'cache' => '\Volcengine\Cdn\Model\CacheForDescribeCdnConfigOutput[]',
        'cache_host' => '\Volcengine\Cdn\Model\CacheHostForDescribeCdnConfigOutput',
        'cache_key' => '\Volcengine\Cdn\Model\CacheKeyForDescribeCdnConfigOutput[]',
        'cname' => 'string',
        'compression' => '\Volcengine\Cdn\Model\CompressionForDescribeCdnConfigOutput',
        'conditional_origin' => '\Volcengine\Cdn\Model\ConditionalOriginForDescribeCdnConfigOutput',
        'create_time' => 'int',
        'custom_error_page' => '\Volcengine\Cdn\Model\CustomErrorPageForDescribeCdnConfigOutput',
        'customize_access_rule' => '\Volcengine\Cdn\Model\CustomizeAccessRuleForDescribeCdnConfigOutput',
        'domain' => 'string',
        'download_speed_limit' => '\Volcengine\Cdn\Model\DownloadSpeedLimitForDescribeCdnConfigOutput',
        'follow_redirect' => 'bool',
        'https' => '\Volcengine\Cdn\Model\HTTPSForDescribeCdnConfigOutput',
        'http_forced_redirect' => '\Volcengine\Cdn\Model\HttpForcedRedirectForDescribeCdnConfigOutput',
        'ipv6' => '\Volcengine\Cdn\Model\IPv6ForDescribeCdnConfigOutput',
        'ip_access_rule' => '\Volcengine\Cdn\Model\IpAccessRuleForDescribeCdnConfigOutput',
        'ip_freq_limit' => '\Volcengine\Cdn\Model\IpFreqLimitForDescribeCdnConfigOutput',
        'ip_speed_limit' => '\Volcengine\Cdn\Model\IpSpeedLimitForDescribeCdnConfigOutput',
        'lock_status' => 'string',
        'method_denied_rule' => '\Volcengine\Cdn\Model\MethodDeniedRuleForDescribeCdnConfigOutput',
        'negative_cache' => '\Volcengine\Cdn\Model\NegativeCacheForDescribeCdnConfigOutput[]',
        'origin' => '\Volcengine\Cdn\Model\OriginForDescribeCdnConfigOutput[]',
        'origin_access_rule' => '\Volcengine\Cdn\Model\OriginAccessRuleForDescribeCdnConfigOutput',
        'origin_arg' => '\Volcengine\Cdn\Model\OriginArgForDescribeCdnConfigOutput[]',
        'origin_cert_check' => '\Volcengine\Cdn\Model\OriginCertCheckForDescribeCdnConfigOutput',
        'origin_host' => 'string',
        'origin_ipv6' => 'string',
        'origin_protocol' => 'string',
        'origin_range' => 'bool',
        'origin_retry' => '\Volcengine\Cdn\Model\OriginRetryForDescribeCdnConfigOutput',
        'origin_rewrite' => '\Volcengine\Cdn\Model\OriginRewriteForDescribeCdnConfigOutput',
        'origin_sni' => '\Volcengine\Cdn\Model\OriginSniForDescribeCdnConfigOutput',
        'page_optimization' => '\Volcengine\Cdn\Model\PageOptimizationForDescribeCdnConfigOutput',
        'project' => 'string',
        'quic' => '\Volcengine\Cdn\Model\QuicForDescribeCdnConfigOutput',
        'redirection_rewrite' => '\Volcengine\Cdn\Model\RedirectionRewriteForDescribeCdnConfigOutput',
        'referer_access_rule' => '\Volcengine\Cdn\Model\RefererAccessRuleForDescribeCdnConfigOutput',
        'remote_auth' => '\Volcengine\Cdn\Model\RemoteAuthForDescribeCdnConfigOutput',
        'request_block_rule' => '\Volcengine\Cdn\Model\RequestBlockRuleForDescribeCdnConfigOutput',
        'request_header' => '\Volcengine\Cdn\Model\RequestHeaderForDescribeCdnConfigOutput[]',
        'response_header' => '\Volcengine\Cdn\Model\ResponseHeaderForDescribeCdnConfigOutput[]',
        'service_region' => 'string',
        'service_type' => 'string',
        'signed_url_auth' => '\Volcengine\Cdn\Model\SignedUrlAuthForDescribeCdnConfigOutput',
        'status' => 'string',
        'timeout' => '\Volcengine\Cdn\Model\TimeoutForDescribeCdnConfigOutput',
        'ua_access_rule' => '\Volcengine\Cdn\Model\UaAccessRuleForDescribeCdnConfigOutput',
        'update_time' => 'int',
        'url_normalize' => '\Volcengine\Cdn\Model\UrlNormalizeForDescribeCdnConfigOutput',
        'video_drag' => '\Volcengine\Cdn\Model\VideoDragForDescribeCdnConfigOutput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'area_access_rule' => null,
        'backup_cname' => null,
        'bandwidth_limit' => null,
        'browser_cache' => null,
        'cache' => null,
        'cache_host' => null,
        'cache_key' => null,
        'cname' => null,
        'compression' => null,
        'conditional_origin' => null,
        'create_time' => 'int64',
        'custom_error_page' => null,
        'customize_access_rule' => null,
        'domain' => null,
        'download_speed_limit' => null,
        'follow_redirect' => null,
        'https' => null,
        'http_forced_redirect' => null,
        'ipv6' => null,
        'ip_access_rule' => null,
        'ip_freq_limit' => null,
        'ip_speed_limit' => null,
        'lock_status' => null,
        'method_denied_rule' => null,
        'negative_cache' => null,
        'origin' => null,
        'origin_access_rule' => null,
        'origin_arg' => null,
        'origin_cert_check' => null,
        'origin_host' => null,
        'origin_ipv6' => null,
        'origin_protocol' => null,
        'origin_range' => null,
        'origin_retry' => null,
        'origin_rewrite' => null,
        'origin_sni' => null,
        'page_optimization' => null,
        'project' => null,
        'quic' => null,
        'redirection_rewrite' => null,
        'referer_access_rule' => null,
        'remote_auth' => null,
        'request_block_rule' => null,
        'request_header' => null,
        'response_header' => null,
        'service_region' => null,
        'service_type' => null,
        'signed_url_auth' => null,
        'status' => null,
        'timeout' => null,
        'ua_access_rule' => null,
        'update_time' => 'int64',
        'url_normalize' => null,
        'video_drag' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'area_access_rule' => 'AreaAccessRule',
        'backup_cname' => 'BackupCname',
        'bandwidth_limit' => 'BandwidthLimit',
        'browser_cache' => 'BrowserCache',
        'cache' => 'Cache',
        'cache_host' => 'CacheHost',
        'cache_key' => 'CacheKey',
        'cname' => 'Cname',
        'compression' => 'Compression',
        'conditional_origin' => 'ConditionalOrigin',
        'create_time' => 'CreateTime',
        'custom_error_page' => 'CustomErrorPage',
        'customize_access_rule' => 'CustomizeAccessRule',
        'domain' => 'Domain',
        'download_speed_limit' => 'DownloadSpeedLimit',
        'follow_redirect' => 'FollowRedirect',
        'https' => 'HTTPS',
        'http_forced_redirect' => 'HttpForcedRedirect',
        'ipv6' => 'IPv6',
        'ip_access_rule' => 'IpAccessRule',
        'ip_freq_limit' => 'IpFreqLimit',
        'ip_speed_limit' => 'IpSpeedLimit',
        'lock_status' => 'LockStatus',
        'method_denied_rule' => 'MethodDeniedRule',
        'negative_cache' => 'NegativeCache',
        'origin' => 'Origin',
        'origin_access_rule' => 'OriginAccessRule',
        'origin_arg' => 'OriginArg',
        'origin_cert_check' => 'OriginCertCheck',
        'origin_host' => 'OriginHost',
        'origin_ipv6' => 'OriginIPv6',
        'origin_protocol' => 'OriginProtocol',
        'origin_range' => 'OriginRange',
        'origin_retry' => 'OriginRetry',
        'origin_rewrite' => 'OriginRewrite',
        'origin_sni' => 'OriginSni',
        'page_optimization' => 'PageOptimization',
        'project' => 'Project',
        'quic' => 'Quic',
        'redirection_rewrite' => 'RedirectionRewrite',
        'referer_access_rule' => 'RefererAccessRule',
        'remote_auth' => 'RemoteAuth',
        'request_block_rule' => 'RequestBlockRule',
        'request_header' => 'RequestHeader',
        'response_header' => 'ResponseHeader',
        'service_region' => 'ServiceRegion',
        'service_type' => 'ServiceType',
        'signed_url_auth' => 'SignedUrlAuth',
        'status' => 'Status',
        'timeout' => 'Timeout',
        'ua_access_rule' => 'UaAccessRule',
        'update_time' => 'UpdateTime',
        'url_normalize' => 'UrlNormalize',
        'video_drag' => 'VideoDrag'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'area_access_rule' => 'setAreaAccessRule',
        'backup_cname' => 'setBackupCname',
        'bandwidth_limit' => 'setBandwidthLimit',
        'browser_cache' => 'setBrowserCache',
        'cache' => 'setCache',
        'cache_host' => 'setCacheHost',
        'cache_key' => 'setCacheKey',
        'cname' => 'setCname',
        'compression' => 'setCompression',
        'conditional_origin' => 'setConditionalOrigin',
        'create_time' => 'setCreateTime',
        'custom_error_page' => 'setCustomErrorPage',
        'customize_access_rule' => 'setCustomizeAccessRule',
        'domain' => 'setDomain',
        'download_speed_limit' => 'setDownloadSpeedLimit',
        'follow_redirect' => 'setFollowRedirect',
        'https' => 'setHttps',
        'http_forced_redirect' => 'setHttpForcedRedirect',
        'ipv6' => 'setIpv6',
        'ip_access_rule' => 'setIpAccessRule',
        'ip_freq_limit' => 'setIpFreqLimit',
        'ip_speed_limit' => 'setIpSpeedLimit',
        'lock_status' => 'setLockStatus',
        'method_denied_rule' => 'setMethodDeniedRule',
        'negative_cache' => 'setNegativeCache',
        'origin' => 'setOrigin',
        'origin_access_rule' => 'setOriginAccessRule',
        'origin_arg' => 'setOriginArg',
        'origin_cert_check' => 'setOriginCertCheck',
        'origin_host' => 'setOriginHost',
        'origin_ipv6' => 'setOriginIpv6',
        'origin_protocol' => 'setOriginProtocol',
        'origin_range' => 'setOriginRange',
        'origin_retry' => 'setOriginRetry',
        'origin_rewrite' => 'setOriginRewrite',
        'origin_sni' => 'setOriginSni',
        'page_optimization' => 'setPageOptimization',
        'project' => 'setProject',
        'quic' => 'setQuic',
        'redirection_rewrite' => 'setRedirectionRewrite',
        'referer_access_rule' => 'setRefererAccessRule',
        'remote_auth' => 'setRemoteAuth',
        'request_block_rule' => 'setRequestBlockRule',
        'request_header' => 'setRequestHeader',
        'response_header' => 'setResponseHeader',
        'service_region' => 'setServiceRegion',
        'service_type' => 'setServiceType',
        'signed_url_auth' => 'setSignedUrlAuth',
        'status' => 'setStatus',
        'timeout' => 'setTimeout',
        'ua_access_rule' => 'setUaAccessRule',
        'update_time' => 'setUpdateTime',
        'url_normalize' => 'setUrlNormalize',
        'video_drag' => 'setVideoDrag'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'area_access_rule' => 'getAreaAccessRule',
        'backup_cname' => 'getBackupCname',
        'bandwidth_limit' => 'getBandwidthLimit',
        'browser_cache' => 'getBrowserCache',
        'cache' => 'getCache',
        'cache_host' => 'getCacheHost',
        'cache_key' => 'getCacheKey',
        'cname' => 'getCname',
        'compression' => 'getCompression',
        'conditional_origin' => 'getConditionalOrigin',
        'create_time' => 'getCreateTime',
        'custom_error_page' => 'getCustomErrorPage',
        'customize_access_rule' => 'getCustomizeAccessRule',
        'domain' => 'getDomain',
        'download_speed_limit' => 'getDownloadSpeedLimit',
        'follow_redirect' => 'getFollowRedirect',
        'https' => 'getHttps',
        'http_forced_redirect' => 'getHttpForcedRedirect',
        'ipv6' => 'getIpv6',
        'ip_access_rule' => 'getIpAccessRule',
        'ip_freq_limit' => 'getIpFreqLimit',
        'ip_speed_limit' => 'getIpSpeedLimit',
        'lock_status' => 'getLockStatus',
        'method_denied_rule' => 'getMethodDeniedRule',
        'negative_cache' => 'getNegativeCache',
        'origin' => 'getOrigin',
        'origin_access_rule' => 'getOriginAccessRule',
        'origin_arg' => 'getOriginArg',
        'origin_cert_check' => 'getOriginCertCheck',
        'origin_host' => 'getOriginHost',
        'origin_ipv6' => 'getOriginIpv6',
        'origin_protocol' => 'getOriginProtocol',
        'origin_range' => 'getOriginRange',
        'origin_retry' => 'getOriginRetry',
        'origin_rewrite' => 'getOriginRewrite',
        'origin_sni' => 'getOriginSni',
        'page_optimization' => 'getPageOptimization',
        'project' => 'getProject',
        'quic' => 'getQuic',
        'redirection_rewrite' => 'getRedirectionRewrite',
        'referer_access_rule' => 'getRefererAccessRule',
        'remote_auth' => 'getRemoteAuth',
        'request_block_rule' => 'getRequestBlockRule',
        'request_header' => 'getRequestHeader',
        'response_header' => 'getResponseHeader',
        'service_region' => 'getServiceRegion',
        'service_type' => 'getServiceType',
        'signed_url_auth' => 'getSignedUrlAuth',
        'status' => 'getStatus',
        'timeout' => 'getTimeout',
        'ua_access_rule' => 'getUaAccessRule',
        'update_time' => 'getUpdateTime',
        'url_normalize' => 'getUrlNormalize',
        'video_drag' => 'getVideoDrag'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['area_access_rule'] = isset($data['area_access_rule']) ? $data['area_access_rule'] : null;
        $this->container['backup_cname'] = isset($data['backup_cname']) ? $data['backup_cname'] : null;
        $this->container['bandwidth_limit'] = isset($data['bandwidth_limit']) ? $data['bandwidth_limit'] : null;
        $this->container['browser_cache'] = isset($data['browser_cache']) ? $data['browser_cache'] : null;
        $this->container['cache'] = isset($data['cache']) ? $data['cache'] : null;
        $this->container['cache_host'] = isset($data['cache_host']) ? $data['cache_host'] : null;
        $this->container['cache_key'] = isset($data['cache_key']) ? $data['cache_key'] : null;
        $this->container['cname'] = isset($data['cname']) ? $data['cname'] : null;
        $this->container['compression'] = isset($data['compression']) ? $data['compression'] : null;
        $this->container['conditional_origin'] = isset($data['conditional_origin']) ? $data['conditional_origin'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['custom_error_page'] = isset($data['custom_error_page']) ? $data['custom_error_page'] : null;
        $this->container['customize_access_rule'] = isset($data['customize_access_rule']) ? $data['customize_access_rule'] : null;
        $this->container['domain'] = isset($data['domain']) ? $data['domain'] : null;
        $this->container['download_speed_limit'] = isset($data['download_speed_limit']) ? $data['download_speed_limit'] : null;
        $this->container['follow_redirect'] = isset($data['follow_redirect']) ? $data['follow_redirect'] : null;
        $this->container['https'] = isset($data['https']) ? $data['https'] : null;
        $this->container['http_forced_redirect'] = isset($data['http_forced_redirect']) ? $data['http_forced_redirect'] : null;
        $this->container['ipv6'] = isset($data['ipv6']) ? $data['ipv6'] : null;
        $this->container['ip_access_rule'] = isset($data['ip_access_rule']) ? $data['ip_access_rule'] : null;
        $this->container['ip_freq_limit'] = isset($data['ip_freq_limit']) ? $data['ip_freq_limit'] : null;
        $this->container['ip_speed_limit'] = isset($data['ip_speed_limit']) ? $data['ip_speed_limit'] : null;
        $this->container['lock_status'] = isset($data['lock_status']) ? $data['lock_status'] : null;
        $this->container['method_denied_rule'] = isset($data['method_denied_rule']) ? $data['method_denied_rule'] : null;
        $this->container['negative_cache'] = isset($data['negative_cache']) ? $data['negative_cache'] : null;
        $this->container['origin'] = isset($data['origin']) ? $data['origin'] : null;
        $this->container['origin_access_rule'] = isset($data['origin_access_rule']) ? $data['origin_access_rule'] : null;
        $this->container['origin_arg'] = isset($data['origin_arg']) ? $data['origin_arg'] : null;
        $this->container['origin_cert_check'] = isset($data['origin_cert_check']) ? $data['origin_cert_check'] : null;
        $this->container['origin_host'] = isset($data['origin_host']) ? $data['origin_host'] : null;
        $this->container['origin_ipv6'] = isset($data['origin_ipv6']) ? $data['origin_ipv6'] : null;
        $this->container['origin_protocol'] = isset($data['origin_protocol']) ? $data['origin_protocol'] : null;
        $this->container['origin_range'] = isset($data['origin_range']) ? $data['origin_range'] : null;
        $this->container['origin_retry'] = isset($data['origin_retry']) ? $data['origin_retry'] : null;
        $this->container['origin_rewrite'] = isset($data['origin_rewrite']) ? $data['origin_rewrite'] : null;
        $this->container['origin_sni'] = isset($data['origin_sni']) ? $data['origin_sni'] : null;
        $this->container['page_optimization'] = isset($data['page_optimization']) ? $data['page_optimization'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['quic'] = isset($data['quic']) ? $data['quic'] : null;
        $this->container['redirection_rewrite'] = isset($data['redirection_rewrite']) ? $data['redirection_rewrite'] : null;
        $this->container['referer_access_rule'] = isset($data['referer_access_rule']) ? $data['referer_access_rule'] : null;
        $this->container['remote_auth'] = isset($data['remote_auth']) ? $data['remote_auth'] : null;
        $this->container['request_block_rule'] = isset($data['request_block_rule']) ? $data['request_block_rule'] : null;
        $this->container['request_header'] = isset($data['request_header']) ? $data['request_header'] : null;
        $this->container['response_header'] = isset($data['response_header']) ? $data['response_header'] : null;
        $this->container['service_region'] = isset($data['service_region']) ? $data['service_region'] : null;
        $this->container['service_type'] = isset($data['service_type']) ? $data['service_type'] : null;
        $this->container['signed_url_auth'] = isset($data['signed_url_auth']) ? $data['signed_url_auth'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['timeout'] = isset($data['timeout']) ? $data['timeout'] : null;
        $this->container['ua_access_rule'] = isset($data['ua_access_rule']) ? $data['ua_access_rule'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['url_normalize'] = isset($data['url_normalize']) ? $data['url_normalize'] : null;
        $this->container['video_drag'] = isset($data['video_drag']) ? $data['video_drag'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets area_access_rule
     *
     * @return \Volcengine\Cdn\Model\AreaAccessRuleForDescribeCdnConfigOutput
     */
    public function getAreaAccessRule()
    {
        return $this->container['area_access_rule'];
    }

    /**
     * Sets area_access_rule
     *
     * @param \Volcengine\Cdn\Model\AreaAccessRuleForDescribeCdnConfigOutput $area_access_rule area_access_rule
     *
     * @return $this
     */
    public function setAreaAccessRule($area_access_rule)
    {
        $this->container['area_access_rule'] = $area_access_rule;

        return $this;
    }

    /**
     * Gets backup_cname
     *
     * @return string
     */
    public function getBackupCname()
    {
        return $this->container['backup_cname'];
    }

    /**
     * Sets backup_cname
     *
     * @param string $backup_cname backup_cname
     *
     * @return $this
     */
    public function setBackupCname($backup_cname)
    {
        $this->container['backup_cname'] = $backup_cname;

        return $this;
    }

    /**
     * Gets bandwidth_limit
     *
     * @return \Volcengine\Cdn\Model\BandwidthLimitForDescribeCdnConfigOutput
     */
    public function getBandwidthLimit()
    {
        return $this->container['bandwidth_limit'];
    }

    /**
     * Sets bandwidth_limit
     *
     * @param \Volcengine\Cdn\Model\BandwidthLimitForDescribeCdnConfigOutput $bandwidth_limit bandwidth_limit
     *
     * @return $this
     */
    public function setBandwidthLimit($bandwidth_limit)
    {
        $this->container['bandwidth_limit'] = $bandwidth_limit;

        return $this;
    }

    /**
     * Gets browser_cache
     *
     * @return \Volcengine\Cdn\Model\BrowserCacheForDescribeCdnConfigOutput[]
     */
    public function getBrowserCache()
    {
        return $this->container['browser_cache'];
    }

    /**
     * Sets browser_cache
     *
     * @param \Volcengine\Cdn\Model\BrowserCacheForDescribeCdnConfigOutput[] $browser_cache browser_cache
     *
     * @return $this
     */
    public function setBrowserCache($browser_cache)
    {
        $this->container['browser_cache'] = $browser_cache;

        return $this;
    }

    /**
     * Gets cache
     *
     * @return \Volcengine\Cdn\Model\CacheForDescribeCdnConfigOutput[]
     */
    public function getCache()
    {
        return $this->container['cache'];
    }

    /**
     * Sets cache
     *
     * @param \Volcengine\Cdn\Model\CacheForDescribeCdnConfigOutput[] $cache cache
     *
     * @return $this
     */
    public function setCache($cache)
    {
        $this->container['cache'] = $cache;

        return $this;
    }

    /**
     * Gets cache_host
     *
     * @return \Volcengine\Cdn\Model\CacheHostForDescribeCdnConfigOutput
     */
    public function getCacheHost()
    {
        return $this->container['cache_host'];
    }

    /**
     * Sets cache_host
     *
     * @param \Volcengine\Cdn\Model\CacheHostForDescribeCdnConfigOutput $cache_host cache_host
     *
     * @return $this
     */
    public function setCacheHost($cache_host)
    {
        $this->container['cache_host'] = $cache_host;

        return $this;
    }

    /**
     * Gets cache_key
     *
     * @return \Volcengine\Cdn\Model\CacheKeyForDescribeCdnConfigOutput[]
     */
    public function getCacheKey()
    {
        return $this->container['cache_key'];
    }

    /**
     * Sets cache_key
     *
     * @param \Volcengine\Cdn\Model\CacheKeyForDescribeCdnConfigOutput[] $cache_key cache_key
     *
     * @return $this
     */
    public function setCacheKey($cache_key)
    {
        $this->container['cache_key'] = $cache_key;

        return $this;
    }

    /**
     * Gets cname
     *
     * @return string
     */
    public function getCname()
    {
        return $this->container['cname'];
    }

    /**
     * Sets cname
     *
     * @param string $cname cname
     *
     * @return $this
     */
    public function setCname($cname)
    {
        $this->container['cname'] = $cname;

        return $this;
    }

    /**
     * Gets compression
     *
     * @return \Volcengine\Cdn\Model\CompressionForDescribeCdnConfigOutput
     */
    public function getCompression()
    {
        return $this->container['compression'];
    }

    /**
     * Sets compression
     *
     * @param \Volcengine\Cdn\Model\CompressionForDescribeCdnConfigOutput $compression compression
     *
     * @return $this
     */
    public function setCompression($compression)
    {
        $this->container['compression'] = $compression;

        return $this;
    }

    /**
     * Gets conditional_origin
     *
     * @return \Volcengine\Cdn\Model\ConditionalOriginForDescribeCdnConfigOutput
     */
    public function getConditionalOrigin()
    {
        return $this->container['conditional_origin'];
    }

    /**
     * Sets conditional_origin
     *
     * @param \Volcengine\Cdn\Model\ConditionalOriginForDescribeCdnConfigOutput $conditional_origin conditional_origin
     *
     * @return $this
     */
    public function setConditionalOrigin($conditional_origin)
    {
        $this->container['conditional_origin'] = $conditional_origin;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return int
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param int $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets custom_error_page
     *
     * @return \Volcengine\Cdn\Model\CustomErrorPageForDescribeCdnConfigOutput
     */
    public function getCustomErrorPage()
    {
        return $this->container['custom_error_page'];
    }

    /**
     * Sets custom_error_page
     *
     * @param \Volcengine\Cdn\Model\CustomErrorPageForDescribeCdnConfigOutput $custom_error_page custom_error_page
     *
     * @return $this
     */
    public function setCustomErrorPage($custom_error_page)
    {
        $this->container['custom_error_page'] = $custom_error_page;

        return $this;
    }

    /**
     * Gets customize_access_rule
     *
     * @return \Volcengine\Cdn\Model\CustomizeAccessRuleForDescribeCdnConfigOutput
     */
    public function getCustomizeAccessRule()
    {
        return $this->container['customize_access_rule'];
    }

    /**
     * Sets customize_access_rule
     *
     * @param \Volcengine\Cdn\Model\CustomizeAccessRuleForDescribeCdnConfigOutput $customize_access_rule customize_access_rule
     *
     * @return $this
     */
    public function setCustomizeAccessRule($customize_access_rule)
    {
        $this->container['customize_access_rule'] = $customize_access_rule;

        return $this;
    }

    /**
     * Gets domain
     *
     * @return string
     */
    public function getDomain()
    {
        return $this->container['domain'];
    }

    /**
     * Sets domain
     *
     * @param string $domain domain
     *
     * @return $this
     */
    public function setDomain($domain)
    {
        $this->container['domain'] = $domain;

        return $this;
    }

    /**
     * Gets download_speed_limit
     *
     * @return \Volcengine\Cdn\Model\DownloadSpeedLimitForDescribeCdnConfigOutput
     */
    public function getDownloadSpeedLimit()
    {
        return $this->container['download_speed_limit'];
    }

    /**
     * Sets download_speed_limit
     *
     * @param \Volcengine\Cdn\Model\DownloadSpeedLimitForDescribeCdnConfigOutput $download_speed_limit download_speed_limit
     *
     * @return $this
     */
    public function setDownloadSpeedLimit($download_speed_limit)
    {
        $this->container['download_speed_limit'] = $download_speed_limit;

        return $this;
    }

    /**
     * Gets follow_redirect
     *
     * @return bool
     */
    public function getFollowRedirect()
    {
        return $this->container['follow_redirect'];
    }

    /**
     * Sets follow_redirect
     *
     * @param bool $follow_redirect follow_redirect
     *
     * @return $this
     */
    public function setFollowRedirect($follow_redirect)
    {
        $this->container['follow_redirect'] = $follow_redirect;

        return $this;
    }

    /**
     * Gets https
     *
     * @return \Volcengine\Cdn\Model\HTTPSForDescribeCdnConfigOutput
     */
    public function getHttps()
    {
        return $this->container['https'];
    }

    /**
     * Sets https
     *
     * @param \Volcengine\Cdn\Model\HTTPSForDescribeCdnConfigOutput $https https
     *
     * @return $this
     */
    public function setHttps($https)
    {
        $this->container['https'] = $https;

        return $this;
    }

    /**
     * Gets http_forced_redirect
     *
     * @return \Volcengine\Cdn\Model\HttpForcedRedirectForDescribeCdnConfigOutput
     */
    public function getHttpForcedRedirect()
    {
        return $this->container['http_forced_redirect'];
    }

    /**
     * Sets http_forced_redirect
     *
     * @param \Volcengine\Cdn\Model\HttpForcedRedirectForDescribeCdnConfigOutput $http_forced_redirect http_forced_redirect
     *
     * @return $this
     */
    public function setHttpForcedRedirect($http_forced_redirect)
    {
        $this->container['http_forced_redirect'] = $http_forced_redirect;

        return $this;
    }

    /**
     * Gets ipv6
     *
     * @return \Volcengine\Cdn\Model\IPv6ForDescribeCdnConfigOutput
     */
    public function getIpv6()
    {
        return $this->container['ipv6'];
    }

    /**
     * Sets ipv6
     *
     * @param \Volcengine\Cdn\Model\IPv6ForDescribeCdnConfigOutput $ipv6 ipv6
     *
     * @return $this
     */
    public function setIpv6($ipv6)
    {
        $this->container['ipv6'] = $ipv6;

        return $this;
    }

    /**
     * Gets ip_access_rule
     *
     * @return \Volcengine\Cdn\Model\IpAccessRuleForDescribeCdnConfigOutput
     */
    public function getIpAccessRule()
    {
        return $this->container['ip_access_rule'];
    }

    /**
     * Sets ip_access_rule
     *
     * @param \Volcengine\Cdn\Model\IpAccessRuleForDescribeCdnConfigOutput $ip_access_rule ip_access_rule
     *
     * @return $this
     */
    public function setIpAccessRule($ip_access_rule)
    {
        $this->container['ip_access_rule'] = $ip_access_rule;

        return $this;
    }

    /**
     * Gets ip_freq_limit
     *
     * @return \Volcengine\Cdn\Model\IpFreqLimitForDescribeCdnConfigOutput
     */
    public function getIpFreqLimit()
    {
        return $this->container['ip_freq_limit'];
    }

    /**
     * Sets ip_freq_limit
     *
     * @param \Volcengine\Cdn\Model\IpFreqLimitForDescribeCdnConfigOutput $ip_freq_limit ip_freq_limit
     *
     * @return $this
     */
    public function setIpFreqLimit($ip_freq_limit)
    {
        $this->container['ip_freq_limit'] = $ip_freq_limit;

        return $this;
    }

    /**
     * Gets ip_speed_limit
     *
     * @return \Volcengine\Cdn\Model\IpSpeedLimitForDescribeCdnConfigOutput
     */
    public function getIpSpeedLimit()
    {
        return $this->container['ip_speed_limit'];
    }

    /**
     * Sets ip_speed_limit
     *
     * @param \Volcengine\Cdn\Model\IpSpeedLimitForDescribeCdnConfigOutput $ip_speed_limit ip_speed_limit
     *
     * @return $this
     */
    public function setIpSpeedLimit($ip_speed_limit)
    {
        $this->container['ip_speed_limit'] = $ip_speed_limit;

        return $this;
    }

    /**
     * Gets lock_status
     *
     * @return string
     */
    public function getLockStatus()
    {
        return $this->container['lock_status'];
    }

    /**
     * Sets lock_status
     *
     * @param string $lock_status lock_status
     *
     * @return $this
     */
    public function setLockStatus($lock_status)
    {
        $this->container['lock_status'] = $lock_status;

        return $this;
    }

    /**
     * Gets method_denied_rule
     *
     * @return \Volcengine\Cdn\Model\MethodDeniedRuleForDescribeCdnConfigOutput
     */
    public function getMethodDeniedRule()
    {
        return $this->container['method_denied_rule'];
    }

    /**
     * Sets method_denied_rule
     *
     * @param \Volcengine\Cdn\Model\MethodDeniedRuleForDescribeCdnConfigOutput $method_denied_rule method_denied_rule
     *
     * @return $this
     */
    public function setMethodDeniedRule($method_denied_rule)
    {
        $this->container['method_denied_rule'] = $method_denied_rule;

        return $this;
    }

    /**
     * Gets negative_cache
     *
     * @return \Volcengine\Cdn\Model\NegativeCacheForDescribeCdnConfigOutput[]
     */
    public function getNegativeCache()
    {
        return $this->container['negative_cache'];
    }

    /**
     * Sets negative_cache
     *
     * @param \Volcengine\Cdn\Model\NegativeCacheForDescribeCdnConfigOutput[] $negative_cache negative_cache
     *
     * @return $this
     */
    public function setNegativeCache($negative_cache)
    {
        $this->container['negative_cache'] = $negative_cache;

        return $this;
    }

    /**
     * Gets origin
     *
     * @return \Volcengine\Cdn\Model\OriginForDescribeCdnConfigOutput[]
     */
    public function getOrigin()
    {
        return $this->container['origin'];
    }

    /**
     * Sets origin
     *
     * @param \Volcengine\Cdn\Model\OriginForDescribeCdnConfigOutput[] $origin origin
     *
     * @return $this
     */
    public function setOrigin($origin)
    {
        $this->container['origin'] = $origin;

        return $this;
    }

    /**
     * Gets origin_access_rule
     *
     * @return \Volcengine\Cdn\Model\OriginAccessRuleForDescribeCdnConfigOutput
     */
    public function getOriginAccessRule()
    {
        return $this->container['origin_access_rule'];
    }

    /**
     * Sets origin_access_rule
     *
     * @param \Volcengine\Cdn\Model\OriginAccessRuleForDescribeCdnConfigOutput $origin_access_rule origin_access_rule
     *
     * @return $this
     */
    public function setOriginAccessRule($origin_access_rule)
    {
        $this->container['origin_access_rule'] = $origin_access_rule;

        return $this;
    }

    /**
     * Gets origin_arg
     *
     * @return \Volcengine\Cdn\Model\OriginArgForDescribeCdnConfigOutput[]
     */
    public function getOriginArg()
    {
        return $this->container['origin_arg'];
    }

    /**
     * Sets origin_arg
     *
     * @param \Volcengine\Cdn\Model\OriginArgForDescribeCdnConfigOutput[] $origin_arg origin_arg
     *
     * @return $this
     */
    public function setOriginArg($origin_arg)
    {
        $this->container['origin_arg'] = $origin_arg;

        return $this;
    }

    /**
     * Gets origin_cert_check
     *
     * @return \Volcengine\Cdn\Model\OriginCertCheckForDescribeCdnConfigOutput
     */
    public function getOriginCertCheck()
    {
        return $this->container['origin_cert_check'];
    }

    /**
     * Sets origin_cert_check
     *
     * @param \Volcengine\Cdn\Model\OriginCertCheckForDescribeCdnConfigOutput $origin_cert_check origin_cert_check
     *
     * @return $this
     */
    public function setOriginCertCheck($origin_cert_check)
    {
        $this->container['origin_cert_check'] = $origin_cert_check;

        return $this;
    }

    /**
     * Gets origin_host
     *
     * @return string
     */
    public function getOriginHost()
    {
        return $this->container['origin_host'];
    }

    /**
     * Sets origin_host
     *
     * @param string $origin_host origin_host
     *
     * @return $this
     */
    public function setOriginHost($origin_host)
    {
        $this->container['origin_host'] = $origin_host;

        return $this;
    }

    /**
     * Gets origin_ipv6
     *
     * @return string
     */
    public function getOriginIpv6()
    {
        return $this->container['origin_ipv6'];
    }

    /**
     * Sets origin_ipv6
     *
     * @param string $origin_ipv6 origin_ipv6
     *
     * @return $this
     */
    public function setOriginIpv6($origin_ipv6)
    {
        $this->container['origin_ipv6'] = $origin_ipv6;

        return $this;
    }

    /**
     * Gets origin_protocol
     *
     * @return string
     */
    public function getOriginProtocol()
    {
        return $this->container['origin_protocol'];
    }

    /**
     * Sets origin_protocol
     *
     * @param string $origin_protocol origin_protocol
     *
     * @return $this
     */
    public function setOriginProtocol($origin_protocol)
    {
        $this->container['origin_protocol'] = $origin_protocol;

        return $this;
    }

    /**
     * Gets origin_range
     *
     * @return bool
     */
    public function getOriginRange()
    {
        return $this->container['origin_range'];
    }

    /**
     * Sets origin_range
     *
     * @param bool $origin_range origin_range
     *
     * @return $this
     */
    public function setOriginRange($origin_range)
    {
        $this->container['origin_range'] = $origin_range;

        return $this;
    }

    /**
     * Gets origin_retry
     *
     * @return \Volcengine\Cdn\Model\OriginRetryForDescribeCdnConfigOutput
     */
    public function getOriginRetry()
    {
        return $this->container['origin_retry'];
    }

    /**
     * Sets origin_retry
     *
     * @param \Volcengine\Cdn\Model\OriginRetryForDescribeCdnConfigOutput $origin_retry origin_retry
     *
     * @return $this
     */
    public function setOriginRetry($origin_retry)
    {
        $this->container['origin_retry'] = $origin_retry;

        return $this;
    }

    /**
     * Gets origin_rewrite
     *
     * @return \Volcengine\Cdn\Model\OriginRewriteForDescribeCdnConfigOutput
     */
    public function getOriginRewrite()
    {
        return $this->container['origin_rewrite'];
    }

    /**
     * Sets origin_rewrite
     *
     * @param \Volcengine\Cdn\Model\OriginRewriteForDescribeCdnConfigOutput $origin_rewrite origin_rewrite
     *
     * @return $this
     */
    public function setOriginRewrite($origin_rewrite)
    {
        $this->container['origin_rewrite'] = $origin_rewrite;

        return $this;
    }

    /**
     * Gets origin_sni
     *
     * @return \Volcengine\Cdn\Model\OriginSniForDescribeCdnConfigOutput
     */
    public function getOriginSni()
    {
        return $this->container['origin_sni'];
    }

    /**
     * Sets origin_sni
     *
     * @param \Volcengine\Cdn\Model\OriginSniForDescribeCdnConfigOutput $origin_sni origin_sni
     *
     * @return $this
     */
    public function setOriginSni($origin_sni)
    {
        $this->container['origin_sni'] = $origin_sni;

        return $this;
    }

    /**
     * Gets page_optimization
     *
     * @return \Volcengine\Cdn\Model\PageOptimizationForDescribeCdnConfigOutput
     */
    public function getPageOptimization()
    {
        return $this->container['page_optimization'];
    }

    /**
     * Sets page_optimization
     *
     * @param \Volcengine\Cdn\Model\PageOptimizationForDescribeCdnConfigOutput $page_optimization page_optimization
     *
     * @return $this
     */
    public function setPageOptimization($page_optimization)
    {
        $this->container['page_optimization'] = $page_optimization;

        return $this;
    }

    /**
     * Gets project
     *
     * @return string
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param string $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets quic
     *
     * @return \Volcengine\Cdn\Model\QuicForDescribeCdnConfigOutput
     */
    public function getQuic()
    {
        return $this->container['quic'];
    }

    /**
     * Sets quic
     *
     * @param \Volcengine\Cdn\Model\QuicForDescribeCdnConfigOutput $quic quic
     *
     * @return $this
     */
    public function setQuic($quic)
    {
        $this->container['quic'] = $quic;

        return $this;
    }

    /**
     * Gets redirection_rewrite
     *
     * @return \Volcengine\Cdn\Model\RedirectionRewriteForDescribeCdnConfigOutput
     */
    public function getRedirectionRewrite()
    {
        return $this->container['redirection_rewrite'];
    }

    /**
     * Sets redirection_rewrite
     *
     * @param \Volcengine\Cdn\Model\RedirectionRewriteForDescribeCdnConfigOutput $redirection_rewrite redirection_rewrite
     *
     * @return $this
     */
    public function setRedirectionRewrite($redirection_rewrite)
    {
        $this->container['redirection_rewrite'] = $redirection_rewrite;

        return $this;
    }

    /**
     * Gets referer_access_rule
     *
     * @return \Volcengine\Cdn\Model\RefererAccessRuleForDescribeCdnConfigOutput
     */
    public function getRefererAccessRule()
    {
        return $this->container['referer_access_rule'];
    }

    /**
     * Sets referer_access_rule
     *
     * @param \Volcengine\Cdn\Model\RefererAccessRuleForDescribeCdnConfigOutput $referer_access_rule referer_access_rule
     *
     * @return $this
     */
    public function setRefererAccessRule($referer_access_rule)
    {
        $this->container['referer_access_rule'] = $referer_access_rule;

        return $this;
    }

    /**
     * Gets remote_auth
     *
     * @return \Volcengine\Cdn\Model\RemoteAuthForDescribeCdnConfigOutput
     */
    public function getRemoteAuth()
    {
        return $this->container['remote_auth'];
    }

    /**
     * Sets remote_auth
     *
     * @param \Volcengine\Cdn\Model\RemoteAuthForDescribeCdnConfigOutput $remote_auth remote_auth
     *
     * @return $this
     */
    public function setRemoteAuth($remote_auth)
    {
        $this->container['remote_auth'] = $remote_auth;

        return $this;
    }

    /**
     * Gets request_block_rule
     *
     * @return \Volcengine\Cdn\Model\RequestBlockRuleForDescribeCdnConfigOutput
     */
    public function getRequestBlockRule()
    {
        return $this->container['request_block_rule'];
    }

    /**
     * Sets request_block_rule
     *
     * @param \Volcengine\Cdn\Model\RequestBlockRuleForDescribeCdnConfigOutput $request_block_rule request_block_rule
     *
     * @return $this
     */
    public function setRequestBlockRule($request_block_rule)
    {
        $this->container['request_block_rule'] = $request_block_rule;

        return $this;
    }

    /**
     * Gets request_header
     *
     * @return \Volcengine\Cdn\Model\RequestHeaderForDescribeCdnConfigOutput[]
     */
    public function getRequestHeader()
    {
        return $this->container['request_header'];
    }

    /**
     * Sets request_header
     *
     * @param \Volcengine\Cdn\Model\RequestHeaderForDescribeCdnConfigOutput[] $request_header request_header
     *
     * @return $this
     */
    public function setRequestHeader($request_header)
    {
        $this->container['request_header'] = $request_header;

        return $this;
    }

    /**
     * Gets response_header
     *
     * @return \Volcengine\Cdn\Model\ResponseHeaderForDescribeCdnConfigOutput[]
     */
    public function getResponseHeader()
    {
        return $this->container['response_header'];
    }

    /**
     * Sets response_header
     *
     * @param \Volcengine\Cdn\Model\ResponseHeaderForDescribeCdnConfigOutput[] $response_header response_header
     *
     * @return $this
     */
    public function setResponseHeader($response_header)
    {
        $this->container['response_header'] = $response_header;

        return $this;
    }

    /**
     * Gets service_region
     *
     * @return string
     */
    public function getServiceRegion()
    {
        return $this->container['service_region'];
    }

    /**
     * Sets service_region
     *
     * @param string $service_region service_region
     *
     * @return $this
     */
    public function setServiceRegion($service_region)
    {
        $this->container['service_region'] = $service_region;

        return $this;
    }

    /**
     * Gets service_type
     *
     * @return string
     */
    public function getServiceType()
    {
        return $this->container['service_type'];
    }

    /**
     * Sets service_type
     *
     * @param string $service_type service_type
     *
     * @return $this
     */
    public function setServiceType($service_type)
    {
        $this->container['service_type'] = $service_type;

        return $this;
    }

    /**
     * Gets signed_url_auth
     *
     * @return \Volcengine\Cdn\Model\SignedUrlAuthForDescribeCdnConfigOutput
     */
    public function getSignedUrlAuth()
    {
        return $this->container['signed_url_auth'];
    }

    /**
     * Sets signed_url_auth
     *
     * @param \Volcengine\Cdn\Model\SignedUrlAuthForDescribeCdnConfigOutput $signed_url_auth signed_url_auth
     *
     * @return $this
     */
    public function setSignedUrlAuth($signed_url_auth)
    {
        $this->container['signed_url_auth'] = $signed_url_auth;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets timeout
     *
     * @return \Volcengine\Cdn\Model\TimeoutForDescribeCdnConfigOutput
     */
    public function getTimeout()
    {
        return $this->container['timeout'];
    }

    /**
     * Sets timeout
     *
     * @param \Volcengine\Cdn\Model\TimeoutForDescribeCdnConfigOutput $timeout timeout
     *
     * @return $this
     */
    public function setTimeout($timeout)
    {
        $this->container['timeout'] = $timeout;

        return $this;
    }

    /**
     * Gets ua_access_rule
     *
     * @return \Volcengine\Cdn\Model\UaAccessRuleForDescribeCdnConfigOutput
     */
    public function getUaAccessRule()
    {
        return $this->container['ua_access_rule'];
    }

    /**
     * Sets ua_access_rule
     *
     * @param \Volcengine\Cdn\Model\UaAccessRuleForDescribeCdnConfigOutput $ua_access_rule ua_access_rule
     *
     * @return $this
     */
    public function setUaAccessRule($ua_access_rule)
    {
        $this->container['ua_access_rule'] = $ua_access_rule;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return int
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param int $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets url_normalize
     *
     * @return \Volcengine\Cdn\Model\UrlNormalizeForDescribeCdnConfigOutput
     */
    public function getUrlNormalize()
    {
        return $this->container['url_normalize'];
    }

    /**
     * Sets url_normalize
     *
     * @param \Volcengine\Cdn\Model\UrlNormalizeForDescribeCdnConfigOutput $url_normalize url_normalize
     *
     * @return $this
     */
    public function setUrlNormalize($url_normalize)
    {
        $this->container['url_normalize'] = $url_normalize;

        return $this;
    }

    /**
     * Gets video_drag
     *
     * @return \Volcengine\Cdn\Model\VideoDragForDescribeCdnConfigOutput
     */
    public function getVideoDrag()
    {
        return $this->container['video_drag'];
    }

    /**
     * Sets video_drag
     *
     * @param \Volcengine\Cdn\Model\VideoDragForDescribeCdnConfigOutput $video_drag video_drag
     *
     * @return $this
     */
    public function setVideoDrag($video_drag)
    {
        $this->container['video_drag'] = $video_drag;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

