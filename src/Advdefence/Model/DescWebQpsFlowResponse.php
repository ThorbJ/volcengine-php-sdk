<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Advdefence\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class DescWebQpsFlowResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DescWebQpsFlowResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'attack_qps_flow' => '\Volcengine\Advdefence\Model\AttackQpsFlowForDescWebQpsFlowOutput[]',
        'back_src_qps_flow' => '\Volcengine\Advdefence\Model\BackSrcQpsFlowForDescWebQpsFlowOutput[]',
        'in_qps_flow' => '\Volcengine\Advdefence\Model\InQpsFlowForDescWebQpsFlowOutput[]',
        'peak_attack_qps' => 'float',
        'peak_attack_qps_flow' => '\Volcengine\Advdefence\Model\PeakAttackQpsFlowForDescWebQpsFlowOutput[]',
        'peak_back_src_qps_flow' => '\Volcengine\Advdefence\Model\PeakBackSrcQpsFlowForDescWebQpsFlowOutput[]',
        'peak_in_qps_flow' => '\Volcengine\Advdefence\Model\PeakInQpsFlowForDescWebQpsFlowOutput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'attack_qps_flow' => null,
        'back_src_qps_flow' => null,
        'in_qps_flow' => null,
        'peak_attack_qps' => 'float',
        'peak_attack_qps_flow' => null,
        'peak_back_src_qps_flow' => null,
        'peak_in_qps_flow' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'attack_qps_flow' => 'AttackQpsFlow',
        'back_src_qps_flow' => 'BackSrcQpsFlow',
        'in_qps_flow' => 'InQpsFlow',
        'peak_attack_qps' => 'PeakAttackQps',
        'peak_attack_qps_flow' => 'PeakAttackQpsFlow',
        'peak_back_src_qps_flow' => 'PeakBackSrcQpsFlow',
        'peak_in_qps_flow' => 'PeakInQpsFlow'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'attack_qps_flow' => 'setAttackQpsFlow',
        'back_src_qps_flow' => 'setBackSrcQpsFlow',
        'in_qps_flow' => 'setInQpsFlow',
        'peak_attack_qps' => 'setPeakAttackQps',
        'peak_attack_qps_flow' => 'setPeakAttackQpsFlow',
        'peak_back_src_qps_flow' => 'setPeakBackSrcQpsFlow',
        'peak_in_qps_flow' => 'setPeakInQpsFlow'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'attack_qps_flow' => 'getAttackQpsFlow',
        'back_src_qps_flow' => 'getBackSrcQpsFlow',
        'in_qps_flow' => 'getInQpsFlow',
        'peak_attack_qps' => 'getPeakAttackQps',
        'peak_attack_qps_flow' => 'getPeakAttackQpsFlow',
        'peak_back_src_qps_flow' => 'getPeakBackSrcQpsFlow',
        'peak_in_qps_flow' => 'getPeakInQpsFlow'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['attack_qps_flow'] = isset($data['attack_qps_flow']) ? $data['attack_qps_flow'] : null;
        $this->container['back_src_qps_flow'] = isset($data['back_src_qps_flow']) ? $data['back_src_qps_flow'] : null;
        $this->container['in_qps_flow'] = isset($data['in_qps_flow']) ? $data['in_qps_flow'] : null;
        $this->container['peak_attack_qps'] = isset($data['peak_attack_qps']) ? $data['peak_attack_qps'] : null;
        $this->container['peak_attack_qps_flow'] = isset($data['peak_attack_qps_flow']) ? $data['peak_attack_qps_flow'] : null;
        $this->container['peak_back_src_qps_flow'] = isset($data['peak_back_src_qps_flow']) ? $data['peak_back_src_qps_flow'] : null;
        $this->container['peak_in_qps_flow'] = isset($data['peak_in_qps_flow']) ? $data['peak_in_qps_flow'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets attack_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\AttackQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getAttackQpsFlow()
    {
        return $this->container['attack_qps_flow'];
    }

    /**
     * Sets attack_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\AttackQpsFlowForDescWebQpsFlowOutput[] $attack_qps_flow attack_qps_flow
     *
     * @return $this
     */
    public function setAttackQpsFlow($attack_qps_flow)
    {
        $this->container['attack_qps_flow'] = $attack_qps_flow;

        return $this;
    }

    /**
     * Gets back_src_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\BackSrcQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getBackSrcQpsFlow()
    {
        return $this->container['back_src_qps_flow'];
    }

    /**
     * Sets back_src_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\BackSrcQpsFlowForDescWebQpsFlowOutput[] $back_src_qps_flow back_src_qps_flow
     *
     * @return $this
     */
    public function setBackSrcQpsFlow($back_src_qps_flow)
    {
        $this->container['back_src_qps_flow'] = $back_src_qps_flow;

        return $this;
    }

    /**
     * Gets in_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\InQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getInQpsFlow()
    {
        return $this->container['in_qps_flow'];
    }

    /**
     * Sets in_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\InQpsFlowForDescWebQpsFlowOutput[] $in_qps_flow in_qps_flow
     *
     * @return $this
     */
    public function setInQpsFlow($in_qps_flow)
    {
        $this->container['in_qps_flow'] = $in_qps_flow;

        return $this;
    }

    /**
     * Gets peak_attack_qps
     *
     * @return float
     */
    public function getPeakAttackQps()
    {
        return $this->container['peak_attack_qps'];
    }

    /**
     * Sets peak_attack_qps
     *
     * @param float $peak_attack_qps peak_attack_qps
     *
     * @return $this
     */
    public function setPeakAttackQps($peak_attack_qps)
    {
        $this->container['peak_attack_qps'] = $peak_attack_qps;

        return $this;
    }

    /**
     * Gets peak_attack_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\PeakAttackQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getPeakAttackQpsFlow()
    {
        return $this->container['peak_attack_qps_flow'];
    }

    /**
     * Sets peak_attack_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\PeakAttackQpsFlowForDescWebQpsFlowOutput[] $peak_attack_qps_flow peak_attack_qps_flow
     *
     * @return $this
     */
    public function setPeakAttackQpsFlow($peak_attack_qps_flow)
    {
        $this->container['peak_attack_qps_flow'] = $peak_attack_qps_flow;

        return $this;
    }

    /**
     * Gets peak_back_src_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\PeakBackSrcQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getPeakBackSrcQpsFlow()
    {
        return $this->container['peak_back_src_qps_flow'];
    }

    /**
     * Sets peak_back_src_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\PeakBackSrcQpsFlowForDescWebQpsFlowOutput[] $peak_back_src_qps_flow peak_back_src_qps_flow
     *
     * @return $this
     */
    public function setPeakBackSrcQpsFlow($peak_back_src_qps_flow)
    {
        $this->container['peak_back_src_qps_flow'] = $peak_back_src_qps_flow;

        return $this;
    }

    /**
     * Gets peak_in_qps_flow
     *
     * @return \Volcengine\Advdefence\Model\PeakInQpsFlowForDescWebQpsFlowOutput[]
     */
    public function getPeakInQpsFlow()
    {
        return $this->container['peak_in_qps_flow'];
    }

    /**
     * Sets peak_in_qps_flow
     *
     * @param \Volcengine\Advdefence\Model\PeakInQpsFlowForDescWebQpsFlowOutput[] $peak_in_qps_flow peak_in_qps_flow
     *
     * @return $this
     */
    public function setPeakInQpsFlow($peak_in_qps_flow)
    {
        $this->container['peak_in_qps_flow'] = $peak_in_qps_flow;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

