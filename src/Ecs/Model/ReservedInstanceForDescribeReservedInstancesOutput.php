<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Ecs\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ReservedInstanceForDescribeReservedInstancesOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ReservedInstanceForDescribeReservedInstancesOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'created_at' => 'string',
        'description' => 'string',
        'expired_at' => 'string',
        'hpc_cluster_id' => 'string',
        'instance_count' => 'int',
        'instance_type_id' => 'string',
        'offering_type' => 'string',
        'project_name' => 'string',
        'region_id' => 'string',
        'reserved_instance_id' => 'string',
        'reserved_instance_name' => 'string',
        'scope' => 'string',
        'start_at' => 'string',
        'status' => 'string',
        'support_modify' => 'string',
        'tags' => '\Volcengine\Ecs\Model\TagForDescribeReservedInstancesOutput[]',
        'zone_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'created_at' => null,
        'description' => null,
        'expired_at' => null,
        'hpc_cluster_id' => null,
        'instance_count' => 'int32',
        'instance_type_id' => null,
        'offering_type' => null,
        'project_name' => null,
        'region_id' => null,
        'reserved_instance_id' => null,
        'reserved_instance_name' => null,
        'scope' => null,
        'start_at' => null,
        'status' => null,
        'support_modify' => null,
        'tags' => null,
        'zone_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'created_at' => 'CreatedAt',
        'description' => 'Description',
        'expired_at' => 'ExpiredAt',
        'hpc_cluster_id' => 'HpcClusterId',
        'instance_count' => 'InstanceCount',
        'instance_type_id' => 'InstanceTypeId',
        'offering_type' => 'OfferingType',
        'project_name' => 'ProjectName',
        'region_id' => 'RegionId',
        'reserved_instance_id' => 'ReservedInstanceId',
        'reserved_instance_name' => 'ReservedInstanceName',
        'scope' => 'Scope',
        'start_at' => 'StartAt',
        'status' => 'Status',
        'support_modify' => 'SupportModify',
        'tags' => 'Tags',
        'zone_id' => 'ZoneId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'created_at' => 'setCreatedAt',
        'description' => 'setDescription',
        'expired_at' => 'setExpiredAt',
        'hpc_cluster_id' => 'setHpcClusterId',
        'instance_count' => 'setInstanceCount',
        'instance_type_id' => 'setInstanceTypeId',
        'offering_type' => 'setOfferingType',
        'project_name' => 'setProjectName',
        'region_id' => 'setRegionId',
        'reserved_instance_id' => 'setReservedInstanceId',
        'reserved_instance_name' => 'setReservedInstanceName',
        'scope' => 'setScope',
        'start_at' => 'setStartAt',
        'status' => 'setStatus',
        'support_modify' => 'setSupportModify',
        'tags' => 'setTags',
        'zone_id' => 'setZoneId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'created_at' => 'getCreatedAt',
        'description' => 'getDescription',
        'expired_at' => 'getExpiredAt',
        'hpc_cluster_id' => 'getHpcClusterId',
        'instance_count' => 'getInstanceCount',
        'instance_type_id' => 'getInstanceTypeId',
        'offering_type' => 'getOfferingType',
        'project_name' => 'getProjectName',
        'region_id' => 'getRegionId',
        'reserved_instance_id' => 'getReservedInstanceId',
        'reserved_instance_name' => 'getReservedInstanceName',
        'scope' => 'getScope',
        'start_at' => 'getStartAt',
        'status' => 'getStatus',
        'support_modify' => 'getSupportModify',
        'tags' => 'getTags',
        'zone_id' => 'getZoneId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['expired_at'] = isset($data['expired_at']) ? $data['expired_at'] : null;
        $this->container['hpc_cluster_id'] = isset($data['hpc_cluster_id']) ? $data['hpc_cluster_id'] : null;
        $this->container['instance_count'] = isset($data['instance_count']) ? $data['instance_count'] : null;
        $this->container['instance_type_id'] = isset($data['instance_type_id']) ? $data['instance_type_id'] : null;
        $this->container['offering_type'] = isset($data['offering_type']) ? $data['offering_type'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['region_id'] = isset($data['region_id']) ? $data['region_id'] : null;
        $this->container['reserved_instance_id'] = isset($data['reserved_instance_id']) ? $data['reserved_instance_id'] : null;
        $this->container['reserved_instance_name'] = isset($data['reserved_instance_name']) ? $data['reserved_instance_name'] : null;
        $this->container['scope'] = isset($data['scope']) ? $data['scope'] : null;
        $this->container['start_at'] = isset($data['start_at']) ? $data['start_at'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['support_modify'] = isset($data['support_modify']) ? $data['support_modify'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['zone_id'] = isset($data['zone_id']) ? $data['zone_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets expired_at
     *
     * @return string
     */
    public function getExpiredAt()
    {
        return $this->container['expired_at'];
    }

    /**
     * Sets expired_at
     *
     * @param string $expired_at expired_at
     *
     * @return $this
     */
    public function setExpiredAt($expired_at)
    {
        $this->container['expired_at'] = $expired_at;

        return $this;
    }

    /**
     * Gets hpc_cluster_id
     *
     * @return string
     */
    public function getHpcClusterId()
    {
        return $this->container['hpc_cluster_id'];
    }

    /**
     * Sets hpc_cluster_id
     *
     * @param string $hpc_cluster_id hpc_cluster_id
     *
     * @return $this
     */
    public function setHpcClusterId($hpc_cluster_id)
    {
        $this->container['hpc_cluster_id'] = $hpc_cluster_id;

        return $this;
    }

    /**
     * Gets instance_count
     *
     * @return int
     */
    public function getInstanceCount()
    {
        return $this->container['instance_count'];
    }

    /**
     * Sets instance_count
     *
     * @param int $instance_count instance_count
     *
     * @return $this
     */
    public function setInstanceCount($instance_count)
    {
        $this->container['instance_count'] = $instance_count;

        return $this;
    }

    /**
     * Gets instance_type_id
     *
     * @return string
     */
    public function getInstanceTypeId()
    {
        return $this->container['instance_type_id'];
    }

    /**
     * Sets instance_type_id
     *
     * @param string $instance_type_id instance_type_id
     *
     * @return $this
     */
    public function setInstanceTypeId($instance_type_id)
    {
        $this->container['instance_type_id'] = $instance_type_id;

        return $this;
    }

    /**
     * Gets offering_type
     *
     * @return string
     */
    public function getOfferingType()
    {
        return $this->container['offering_type'];
    }

    /**
     * Sets offering_type
     *
     * @param string $offering_type offering_type
     *
     * @return $this
     */
    public function setOfferingType($offering_type)
    {
        $this->container['offering_type'] = $offering_type;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets region_id
     *
     * @return string
     */
    public function getRegionId()
    {
        return $this->container['region_id'];
    }

    /**
     * Sets region_id
     *
     * @param string $region_id region_id
     *
     * @return $this
     */
    public function setRegionId($region_id)
    {
        $this->container['region_id'] = $region_id;

        return $this;
    }

    /**
     * Gets reserved_instance_id
     *
     * @return string
     */
    public function getReservedInstanceId()
    {
        return $this->container['reserved_instance_id'];
    }

    /**
     * Sets reserved_instance_id
     *
     * @param string $reserved_instance_id reserved_instance_id
     *
     * @return $this
     */
    public function setReservedInstanceId($reserved_instance_id)
    {
        $this->container['reserved_instance_id'] = $reserved_instance_id;

        return $this;
    }

    /**
     * Gets reserved_instance_name
     *
     * @return string
     */
    public function getReservedInstanceName()
    {
        return $this->container['reserved_instance_name'];
    }

    /**
     * Sets reserved_instance_name
     *
     * @param string $reserved_instance_name reserved_instance_name
     *
     * @return $this
     */
    public function setReservedInstanceName($reserved_instance_name)
    {
        $this->container['reserved_instance_name'] = $reserved_instance_name;

        return $this;
    }

    /**
     * Gets scope
     *
     * @return string
     */
    public function getScope()
    {
        return $this->container['scope'];
    }

    /**
     * Sets scope
     *
     * @param string $scope scope
     *
     * @return $this
     */
    public function setScope($scope)
    {
        $this->container['scope'] = $scope;

        return $this;
    }

    /**
     * Gets start_at
     *
     * @return string
     */
    public function getStartAt()
    {
        return $this->container['start_at'];
    }

    /**
     * Sets start_at
     *
     * @param string $start_at start_at
     *
     * @return $this
     */
    public function setStartAt($start_at)
    {
        $this->container['start_at'] = $start_at;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets support_modify
     *
     * @return string
     */
    public function getSupportModify()
    {
        return $this->container['support_modify'];
    }

    /**
     * Sets support_modify
     *
     * @param string $support_modify support_modify
     *
     * @return $this
     */
    public function setSupportModify($support_modify)
    {
        $this->container['support_modify'] = $support_modify;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Ecs\Model\TagForDescribeReservedInstancesOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Ecs\Model\TagForDescribeReservedInstancesOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return string
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param string $zone_id zone_id
     *
     * @return $this
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

